name: Continuous Persistent VPS with Tmate + sshx.io + Bot

on:
  workflow_dispatch:
  repository_dispatch:
    types: [start-vps]

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 359

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install prerequisites & Docker
        run: |
          sudo apt update
          sudo apt install -y curl unzip git sudo net-tools neofetch jq python3 python3-pip 
          
      - name: Create user biralo with sudo
        run: |
          if ! id -u biralo >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash biralo
            echo "biralo:biralo" | sudo chpasswd
            sudo usermod -aG sudo biralo
            echo "biralo ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/biralo
          fi

      - name: Install sshx
        run: curl -sSf https://sshx.io/get | sh

      - name: Start sshx.io session & get link
        id: sshx_session
        run: |
          sshx > sshx.log 2>&1 &
          sleep 6
          LINK=$(grep -m1 -o "https://sshx.io/s/[^ ]*" sshx.log || echo "")
          echo "link=$LINK" >> $GITHUB_OUTPUT

      - name: Start tmate session & get link
        id: tmate_session
        run: |
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          WEB=$(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')
          echo "ssh=$SSH" >> $GITHUB_OUTPUT
          echo "web=$WEB" >> $GITHUB_OUTPUT

      - name: Deploy Bot
        run: |
          # Clone bot repo if not exists
          if [ ! -d "good" ]; then
            git clone https://github.com/Zerioak/good.git
          fi
          cd good

          # Build Docker images
          docker build -t debian-with-tmate -f Dockerfile-debian . || true
          docker build -t debian-with-tmate -f Dockerfile-ubuntu . || true

          # Run Python bot in background
          nohup python3 v2.py > bot.log 2>&1 &

      - name: Send Discord Webhook with VPS info
        run: |
          USER_ID="${{ github.event.client_payload.requester_id || '000000000000000000' }}"
          USER_TAG="${{ github.event.client_payload.requester_tag || github.actor }}"
          SSHLINK="${{ steps.sshx_session.outputs.link }}"
          TMATE_SSH="${{ steps.tmate_session.outputs.ssh }}"
          TMATE_WEB="${{ steps.tmate_session.outputs.web }}"

          if [[ "$USER_ID" =~ ^[0-9]+$ ]] && [[ "$USER_ID" != "000000000000000000" ]]; then
            MENTION="<@${USER_ID}>"
          else
            MENTION=""
          fi

          PAYLOAD=$(jq -n \
            --arg ssh "$SSHLINK" \
            --arg tssh "$TMATE_SSH" \
            --arg tweb "$TMATE_WEB" \
            --arg userid "$USER_ID" \
            --arg tag "$USER_TAG" \
            --arg username "biralo" \
            --arg password "biralo" \
            --arg mention "$MENTION" \
            '{
              content: $mention,
              embeds: [{
                title: "üåê VPS Info",
                color: 65280,
                fields: [
                  {name: "Requested by", value: $tag, inline: true},
                  {name: "Username", value: $username, inline: true},
                  {name: "Password", value: $password, inline: true},
                  {name: "üîë SSHX Session", value: "[Open Web Terminal](\($ssh))", inline: false},
                  {name: "üîë Tmate SSH", value: $tssh, inline: false},
                  {name: "üåç Tmate Web", value: $tweb, inline: false}
                ],
                footer: {text: "Powered by Zerioak"}
              }]
            }')
          curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" ${{ secrets.DISCORD_WEBHOOK }}

      - name: VPS alive (~5h 58m 58s)
        run: sleep 21538

      - name: Trigger next VPS session before shutdown
        if: always()
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -d '{"event_type": "start-vps"}'
